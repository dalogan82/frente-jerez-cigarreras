import React from "react";
import { View, Text } from "react-native";
import { COLORS } from "../constants/theme";

export type HBarDatum = {
  label: string;
  normal: number;         // desplazamientos cortos
  desplazamiento: number; // desplazamientos largos
};

type Props = {
  data: HBarDatum[];
  max: number;
};

export default function HorizontalBarChart({ data, max }: Props) {
  if (!data || data.length === 0) return null;

  return (
    <View style={{ marginTop: 20, paddingHorizontal: 10 }}>
      {data.map((d, i) => {
        const total = d.normal + d.desplazamiento;
        const cortoWidth = (d.normal / max) * 100;
        const largoWidth = (d.desplazamiento / max) * 100;

        return (
          <View key={i} style={{ marginBottom: 20 }}>
            {/* Nombre y totales */}
            <Text
              style={{
                color: COLORS.text,
                fontWeight: "bold",
                marginBottom: 6,
              }}
            >
              {d.label}
            </Text>

            {/* Contenedor de barra */}
            <View
              style={{
                flexDirection: "row",
                height: 24,
                borderRadius: 6,
                overflow: "hidden",
                backgroundColor: "#EEE",
              }}
            >
              {/* Parte corta */}
              <View
                style={{
                  width: `${cortoWidth}%`,
                  backgroundColor: COLORS.primary, // morado
                  justifyContent: "center",
                  alignItems: "center",
                }}
              >
                {d.normal > 0 && (
                  <Text
                    style={{
                      color: "white",
                      fontSize: 12,
                      fontWeight: "bold",
                    }}
                  >
                    {d.normal}
                  </Text>
                )}
              </View>

              {/* Parte larga */}
              <View
                style={{
                  width: `${largoWidth}%`,
                  backgroundColor: "#FFD700", // dorado
                  justifyContent: "center",
                  alignItems: "center",
                }}
              >
                {d.desplazamiento > 0 && (
                  <Text
                    style={{
                      color: "#5E1381",
                      fontSize: 12,
                      fontWeight: "bold",
                    }}
                  >
                    {d.desplazamiento}
                  </Text>
                )}
              </View>
            </View>

            {/* Totales abajo */}
            <Text
              style={{
                color: "#555",
                fontSize: 13,
                marginTop: 4,
                textAlign: "center",
              }}
            >
              Corto: {d.normal} · Largo: {d.desplazamiento} · Total: {total}
            </Text>
          </View>
        );
      })}
    </View>
  );
}
